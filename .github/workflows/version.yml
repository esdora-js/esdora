name: Create Version PR

on:
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Generate Token for Bot
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create Version Files
        run: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Generate PR Body
        id: generate_pr_body
        run: |
          {
            echo 'body<<EOF'
            echo 'An automated PR to version packages and update changelogs.'
            echo ''
            echo 'Merging this PR will trigger the release workflow to publish packages to npm.'
            echo ''

            # 检查是否有文件变更（版本更新和 CHANGELOG 更新）
            if git diff --name-only HEAD | grep -E "(package\.json|CHANGELOG\.md)" > /dev/null; then
              echo '## 📦 Version Updates'
              echo ''

              # 显示版本变更的包
              git diff --name-only HEAD | grep "package\.json" | while IFS= read -r package_file; do
                if [ -f "$package_file" ]; then
                  package_dir=$(dirname "$package_file")
                  package_name=$(jq -r '.name' "$package_file" 2>/dev/null || echo "unknown")
                  old_version=$(git show HEAD:"$package_file" | jq -r '.version' 2>/dev/null || echo "unknown")
                  new_version=$(jq -r '.version' "$package_file" 2>/dev/null || echo "unknown")

                  if [ "$old_version" != "$new_version" ] && [ "$old_version" != "unknown" ] && [ "$new_version" != "unknown" ]; then
                    echo "- **$package_name**: $old_version → $new_version"
                  fi
                fi
              done

              echo ''
              echo '## 📋 Changelog Updates'
              echo ''

              # 显示 CHANGELOG 的新增内容
              git diff --name-only HEAD | grep "CHANGELOG\.md" | while IFS= read -r changelog_file; do
                if [ -f "$changelog_file" ]; then
                  package_dir=$(dirname "$changelog_file")
                  package_name=$(jq -r '.name' "$package_dir/package.json" 2>/dev/null || echo "$(basename "$package_dir")")

                  echo "### $package_name"
                  echo ''

                  # 提取新增的 CHANGELOG 内容（第一个版本块）
                  git diff HEAD "$changelog_file" | grep "^+" | grep -v "^+++" | sed 's/^+//' | head -20 | while IFS= read -r line; do
                    if [ -n "$line" ]; then
                      echo "$line"
                    fi
                  done
                  echo ''
                fi
              done
            else
              echo '## 📦 No Changes'
              echo ''
              echo 'No version updates or changelog changes detected.'
            fi

            echo ''
            echo '---'
            echo ''
            echo '🤖 This PR was automatically generated by changesets.'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Create Pull Request for Versioning
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate_token.outputs.token }}
          commit-message: 'chore(release): publish new version'
          title: 'chore(release): publish new version'
          body: ${{ steps.generate_pr_body.outputs.body }}
          branch: chore/changeset-release
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          delete-branch: true
