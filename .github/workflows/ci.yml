name: CI

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - .github/workflows/ci.yml
      - pnpm-lock.yaml
      - package.json
      - tsconfig.base.json
  pull_request:
    branches:
      - main
    paths:
      - 'packages/**'
      - .github/workflows/ci.yml
      - pnpm-lock.yaml
      - package.json
      - tsconfig.base.json
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  NODE_OPTIONS: --max-old-space-size=4096
  CI: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v5
        with:
          node-version: lts/*
          cache: pnpm

      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm run typecheck

  test:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      matrix:
        node: [lts/*]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set node ${{ matrix.node }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm run test:coverage

      - name: Find coverage files
        id: coverage
        run: |
          files=()
          flags=()
          for f in $(find ./packages -name "coverage-final.json" -type f); do
            files+=("$f")
            # 提取 package 名作为 flag：packages/<pkg>/coverage/coverage-final.json -> <pkg>
            flags+=("$(basename $(dirname $(dirname "$f")))")
          done

          # 输出成 GitHub Actions 输出变量（逗号分隔）
          echo "files=$(IFS=,; echo "${files[*]}")" >> $GITHUB_OUTPUT
          echo "flags=$(IFS=,; echo "${flags[*]}")" >> $GITHUB_OUTPUT

      - name: Upload coverage reports to Codecov (per-package flags)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.coverage.outputs.files }}
          flags: ${{ steps.coverage.outputs.flags }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload coverage reports to Codecov (default)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.coverage.outputs.files }}
          fail_ci_if_error: false
          verbose: true
