name: Create Version PR

on:
  push:
    branches:
      - main
    paths:
      - '.changeset/**'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          # 我们需要完整的历史记录来正确计算版本
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Version Files
        # 这一步只负责在 CI 环境中运行 `pnpm changeset version`
        # 它会消耗 changeset 文件，并生成对 package.json 和 CHANGELOG.md 的修改
        run: pnpm changeset version

      - name: Create Pull Request for Versioning
        # 这一步，我们使用一个专门的、更强大的 action 来创建 PR
        # 它永远不会直接推送到 main，而是创建一个新的 PR
        uses: peter-evans/create-pull-request@v6
        with:
          # --- PR 的基本信息 ---
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'release: version packages'
          title: 'Release: Version Packages'
          body: |
            An automated PR to version packages. This PR was generated by the `Create Version PR` workflow.
            Merging this PR will trigger the release workflow to publish packages to npm.

            一个用于版本控制的自动化 PR。此 PR 由 `Create Version PR` 工作流生成。
            合并此 PR 将触发发布工作流，将包发布到 npm。

          # --- 分支和作者信息 ---
          branch: changeset-release/main
          author: 'github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>'
          committer: 'github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>'

          # --- PR 的行为 ---
          # 如果 'changeset-release/main' 分支已存在，就强制更新它
          # 这确保了如果连续合并了多个带 changeset 的 PR，版本 PR 也只会有一个
          branch-suffix: none
          delete-branch: true # 合并后自动删除这个 PR 分支```
