name: Release Packages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest

    if: |
      (github.event_name == 'push' &&
      github.ref == 'refs/heads/main' &&
      contains(github.event.head_commit.message, 'chore(release): publish new version')) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Generate Token for Bot
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          token: ${{ steps.generate_token.outputs.token }} # 使用动态生成的 token
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Packages
        run: pnpm --filter './packages/*' build

      - name: Changesets Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm ci:publish
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Trigger docs deploy
        if: steps.changesets.outputs.published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISHED_PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}
        run: |
          VERSION_STRING=$(echo $PUBLISHED_PACKAGES | jq -r '. | map("\(.name)@\(.version)") | join(", ")')
          gh workflow run page.yml -f version="$VERSION_STRING"
